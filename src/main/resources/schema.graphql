type User {
    username: String!
    password: String!
    fullname: String
    enable: Boolean!
    schedules: [Schedule]
}

input UserInput{
    username: String!
    password: String!
    lastname: String
    role: Boolean!
}

type Schedule{
    id: Int!
    #Using Float for Long type in Java
    beginTime: Float
    endTime: Float
    note: String
    userID: String!
}

type Query{
    usersByUsername(username:String!):User
    allUsers: [User]
    scheduleByUserID(userID:String!):[Schedule]
    scheduleByUserIDInRange(userID:String beginTime:Float! endTime:Float!):[Schedule]

}

type Mutation{
    addUser(user: UserInput):User
}

schema {
    query: Query
    mutation: Mutation
}